import random
import logging

from database.db import Database
from database.models import Word
from bot.keyboards import main_keyboard
from telebot import TeleBot, types

logger = logging.getLogger(__name__)


def show_next_card(bot: TeleBot, message: types.Message, db: Database):
    chat_id = message.chat.id
    user_id = message.from_user.id

    try:
        # –ì–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã—Ö —Å–ª–æ–≤
        db.ensure_user_exists(user_id)

        # –ü–æ–ª—É—á–∞–µ–º —Å–ª–æ–≤–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        words = db.get_user_words(user_id)

        if not words:
            # –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –¥–æ–±–∞–≤–∏—Ç—å –ø–µ—Ä–≤–æ–µ —Å–ª–æ–≤–æ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            markup.add(types.KeyboardButton("–î–æ–±–∞–≤–∏—Ç—å —Å–ª–æ–≤–æ ‚ûï"))
            bot.send_message(
                    chat_id,
                    "–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç —Å–ª–æ–≤ –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è. –î–æ–±–∞–≤—å—Ç–µ –ø–µ—Ä–≤–æ–µ —Å–ª–æ–≤–æ!",
                    reply_markup=markup
            )
            return None

        # –í—ã–±–∏—Ä–∞–µ–º —Å–ª—É—á–∞–π–Ω–æ–µ —Ü–µ–ª–µ–≤–æ–µ —Å–ª–æ–≤–æ
        target = random.choice(words)

        # –í—ã–±–∏—Ä–∞–µ–º 3 –¥—Ä—É–≥–∏—Ö —Å–ª—É—á–∞–π–Ω—ã—Ö —Å–ª–æ–≤–∞
        other_words = [word for word in words if word.id != target.id]
        others = random.sample(other_words, min(3, len(other_words)))

        # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
        markup = main_keyboard([target] + others)

        # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        if not db.update_user_state(user_id, target.id):
            logger.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è user_id={user_id}")

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —É–∫–∞–∑–∞–Ω–∏–µ–º —Ç–∏–ø–∞ —Å–ª–æ–≤–∞
        word_type = "üÜï –í–∞—à–µ —Å–ª–æ–≤–æ" if target.is_custom else "üìö –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ —Å–ª–æ–≤–æ"
        message_text = (
                f"–í—ã–±–µ—Ä–∏ –ø–µ—Ä–µ–≤–æ–¥ —Å–ª–æ–≤–∞:\n"
                f"‚òê {target.russian}\n"
                f"<i>{word_type}</i>"
        )

        bot.send_message(
                chat_id,
                message_text,
                reply_markup=markup,
                parse_mode="HTML"
        )

        logger.info(f"–ü–æ–∫–∞–∑–∞–Ω–∞ –∫–∞—Ä—Ç–æ—á–∫–∞: {target.english} -> {target.russian} –¥–ª—è user_id={user_id}")
        return target

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∫–∞–∑–µ –∫–∞—Ä—Ç–æ—á–∫–∏: {str(e)}")

        # –ü—Ä–∏ –æ—à–∏–±–∫–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        markup.add(types.KeyboardButton("–î–∞–ª—å—à–µ ‚è≠"))

        bot.send_message(
                chat_id,
                "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ù–∞–∂–º–∏—Ç–µ '–î–∞–ª—å—à–µ ‚è≠' –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è",
                reply_markup=markup
        )
        return None